{"ast":null,"code":"var _jsxFileName = \"/Users/arvindpurohith/Desktop/CertificateToolKit/CertificateTool/environments/certificate_tool_frontend/src/components/NewManagerForm.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewManagerForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pk: 0,\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      no_of_spot_awards: 0\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.createManager = e => {\n      e.preventDefault();\n      axios.post(API_URL, this.state).then(() => {\n        this.props.resetState();\n        this.props.toggle();\n      });\n    };\n\n    this.editManager = e => {\n      e.preventDefault();\n      axios.put(API_URL + this.state.pk, this.state).then(() => {\n        this.props.resetState();\n        this.props.toggle();\n      });\n    };\n\n    this.defaultIfEmpty = value => {\n      return value === \"\" ? \"\" : value;\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.manager) {\n      const {\n        pk,\n        name,\n        email,\n        phone,\n        no_of_spot_awards\n      } = this.props.manager;\n      this.setState({\n        pk,\n        name,\n        email,\n        phone,\n        no_of_spot_awards\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.props.manager ? this.editManager : this.createManager,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"name\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"phone\",\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"phone\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.phone)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"no_of_spot_awards\",\n          children: \"Number Of Spot Awards:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          name: \"no_of_spot_awards\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.phone)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewManagerForm;","map":{"version":3,"sources":["/Users/arvindpurohith/Desktop/CertificateToolKit/CertificateTool/environments/certificate_tool_frontend/src/components/NewManagerForm.js"],"names":["React","Button","Form","FormGroup","Input","Label","axios","API_URL","NewManagerForm","Component","state","pk","name","email","phone","no_of_spot_awards","onChange","e","setState","target","value","createManager","preventDefault","post","then","props","resetState","toggle","editManager","put","defaultIfEmpty","componentDidMount","manager","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nimport axios from \"axios\";\n\nimport { API_URL } from \"../constants\";\n\nclass NewManagerForm extends React.Component {\n  state = {\n    pk: 0,\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    no_of_spot_awards: 0\n  };\n\n  componentDidMount() {\n    if (this.props.manager) {\n      const { pk, name, email, phone, no_of_spot_awards } = this.props.manager;\n      this.setState({ pk, name, email, phone, no_of_spot_awards });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  createManager = e => {\n    e.preventDefault();\n    axios.post(API_URL, this.state).then(() => {\n      this.props.resetState();\n      this.props.toggle();\n    });\n  };\n\n  editManager = e => {\n    e.preventDefault();\n    axios.put(API_URL + this.state.pk, this.state).then(() => {\n      this.props.resetState();\n      this.props.toggle();\n    });\n  };\n\n  defaultIfEmpty = value => {\n    return value === \"\" ? \"\" : value;\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.props.manager ? this.editManager : this.createManager}>\n        <FormGroup>\n          <Label for=\"name\">Name:</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.name)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Email:</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.email)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"phone\">Phone:</Label>\n          <Input\n            type=\"text\"\n            name=\"phone\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.phone)}\n          />\n        </FormGroup>\n\t<FormGroup>\n          <Label for=\"no_of_spot_awards\">Number Of Spot Awards:</Label>\n          <Input\n            type=\"number\"\n            name=\"no_of_spot_awards\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.phone)}\n          />\n        </FormGroup>\n        <Button>Send</Button>\n      </Form>\n    );\n  }\n}\n\nexport default NewManagerForm;\n"]},"metadata":{},"sourceType":"module"}